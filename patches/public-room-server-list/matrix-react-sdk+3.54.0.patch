diff --git a/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss b/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
index 8dbd7f0..e0aee36 100644
--- a/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
+++ b/node_modules/matrix-react-sdk/res/css/views/directory/_NetworkDropdown.pcss
@@ -17,6 +17,7 @@ limitations under the License.
 .mx_NetworkDropdown_wrapper .mx_ContextualMenu {
     .mx_GenericDropdownMenu_Option {
         &.mx_GenericDropdownMenu_Option--header {
+            display:none;
             padding-top: $spacing-12;
             padding-bottom: $spacing-4;
             min-width: 160px;
@@ -45,12 +46,14 @@ limitations under the License.
     }
 
     .mx_GenericDropdownMenu_divider {
+            display:none;
         margin-top: $spacing-4;
         margin-bottom: $spacing-4;
     }
 }
 
 .mx_NetworkDropdown_addServer {
+    display:none;
     font-weight: normal;
     font-size: $font-15px;
 }
diff --git a/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx b/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
index 701e5e3..e4d8082 100644
--- a/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
+++ b/node_modules/matrix-react-sdk/src/components/views/directory/NetworkDropdown.tsx
@@ -30,7 +30,7 @@ import { GenericDropdownMenu, GenericDropdownMenuItem } from "../../structures/G
 import TextInputDialog from "../dialogs/TextInputDialog";
 import AccessibleButton from "../elements/AccessibleButton";
 import withValidation from "../elements/Validation";
-
+import TchapUtils from "../../../../../src/util/TchapUtils"
 const SETTING_NAME = "room_directory_servers";
 
 export interface IPublicRoomDirectoryConfig {
@@ -147,6 +147,9 @@ interface IProps {
 export const NetworkDropdown = ({ protocols, config, setConfig }: IProps) => {
     const { allServers, homeServer, userDefinedServers, setUserDefinedServers } = useServers();
 
+
+   
+
     const options: GenericDropdownMenuItem<IPublicRoomDirectoryConfig | null>[] = allServers.map(roomServer => ({
         key: { roomServer, instanceId: null },
         label: roomServer,
@@ -154,7 +157,7 @@ export const NetworkDropdown = ({ protocols, config, setConfig }: IProps) => {
         options: [
             {
                 key: { roomServer, instanceId: undefined },
-                label: _t("Matrix"),
+                label: TchapUtils.toFriendlyServerName(roomServer)
             },
             ...(roomServer === homeServer && protocols ? Object.values(protocols)
                 .flatMap(protocol => protocol.instances)
@@ -221,7 +224,7 @@ export const NetworkDropdown = ({ protocols, config, setConfig }: IProps) => {
             options={options}
             onChange={(option) => setConfig(option)}
             selectedLabel={option => option?.key ? _t("Show: %(instance)s rooms (%(server)s)", {
-                server: option.key.roomServer,
+                server: TchapUtils.toFriendlyServerName(option.key.roomServer),
                 instance: option.key.instanceId ? option.label : "Matrix",
             }) : _t("Show: Matrix rooms")}
             AdditionalOptions={addNewServer}
